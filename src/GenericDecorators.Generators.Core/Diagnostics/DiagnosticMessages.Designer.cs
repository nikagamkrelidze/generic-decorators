//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GenericDecorators.Generators.Core.Diagnostics {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DiagnosticMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DiagnosticMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GenericDecorators.Generators.Core.Diagnostics.DiagnosticMessages", typeof(DiagnosticMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Interceptor type {0} is not derived from the {1}.
        /// </summary>
        internal static string InvalidInterceptorSymbolMessage {
            get {
                return ResourceManager.GetString("InvalidInterceptorSymbolMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type used where interceptor was expected.
        /// </summary>
        internal static string InvalidInterceptorSymbolTitle {
            get {
                return ResourceManager.GetString("InvalidInterceptorSymbolTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} is not a valid interface.
        /// </summary>
        internal static string InvalidInterfaceSymbolMessage {
            get {
                return ResourceManager.GetString("InvalidInterfaceSymbolMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type used where interface was expected.
        /// </summary>
        internal static string InvalidInterfaceSymbolTitle {
            get {
                return ResourceManager.GetString("InvalidInterfaceSymbolTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} mustonly have one public constructor.
        /// </summary>
        internal static string InvalidNumberOfInterceptorConstructorsMessage {
            get {
                return ResourceManager.GetString("InvalidNumberOfInterceptorConstructorsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interceptor must only have one public constructor.
        /// </summary>
        internal static string InvalidNumberOfInterceptorConstructorsTitle {
            get {
                return ResourceManager.GetString("InvalidNumberOfInterceptorConstructorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must not be an generic interface.
        /// </summary>
        internal static string NoOpenGenericInterfacesAllowedMessage {
            get {
                return ResourceManager.GetString("NoOpenGenericInterfacesAllowedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open generic interfaces not allowed.
        /// </summary>
        internal static string NoOpenGenericInterfacesAllowedTitle {
            get {
                return ResourceManager.GetString("NoOpenGenericInterfacesAllowedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must not have methods with params parameters.
        /// </summary>
        internal static string NoParamsParamteresAllowedMessage {
            get {
                return ResourceManager.GetString("NoParamsParamteresAllowedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Params parameters not allowed.
        /// </summary>
        internal static string NoParamsParamteresAllowedTitle {
            get {
                return ResourceManager.GetString("NoParamsParamteresAllowedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must not have methods with reference parameters.
        /// </summary>
        internal static string NoRefParamteresAllowedMessage {
            get {
                return ResourceManager.GetString("NoRefParamteresAllowedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference parameters not allowed.
        /// </summary>
        internal static string NoRefParamteresAllowedTitle {
            get {
                return ResourceManager.GetString("NoRefParamteresAllowedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} can only have method or property members.
        /// </summary>
        internal static string OnlyMethodsAndPropertiesAllowedMessage {
            get {
                return ResourceManager.GetString("OnlyMethodsAndPropertiesAllowedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-method members not allowed.
        /// </summary>
        internal static string OnlyMethodsPropertiesAllowedTitle {
            get {
                return ResourceManager.GetString("OnlyMethodsPropertiesAllowedTitle", resourceCulture);
            }
        }
    }
}
